// Generated by view binder compiler. Do not edit!
package com.example.StudyApp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.StudyApp.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAnalyticsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView accuracyText;

  @NonNull
  public final TextView avgResponseTimeText;

  @NonNull
  public final MaterialCardView emptyStateCard;

  @NonNull
  public final MaterialCardView headerCard;

  @NonNull
  public final RecyclerView recentEventsRecyclerView;

  @NonNull
  public final TextView totalCorrectText;

  @NonNull
  public final TextView totalDecksText;

  @NonNull
  public final TextView totalFlashcardsText;

  @NonNull
  public final TextView totalWrongText;

  private ActivityAnalyticsBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView accuracyText, @NonNull TextView avgResponseTimeText,
      @NonNull MaterialCardView emptyStateCard, @NonNull MaterialCardView headerCard,
      @NonNull RecyclerView recentEventsRecyclerView, @NonNull TextView totalCorrectText,
      @NonNull TextView totalDecksText, @NonNull TextView totalFlashcardsText,
      @NonNull TextView totalWrongText) {
    this.rootView = rootView;
    this.accuracyText = accuracyText;
    this.avgResponseTimeText = avgResponseTimeText;
    this.emptyStateCard = emptyStateCard;
    this.headerCard = headerCard;
    this.recentEventsRecyclerView = recentEventsRecyclerView;
    this.totalCorrectText = totalCorrectText;
    this.totalDecksText = totalDecksText;
    this.totalFlashcardsText = totalFlashcardsText;
    this.totalWrongText = totalWrongText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAnalyticsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAnalyticsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_analytics, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAnalyticsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accuracyText;
      TextView accuracyText = ViewBindings.findChildViewById(rootView, id);
      if (accuracyText == null) {
        break missingId;
      }

      id = R.id.avgResponseTimeText;
      TextView avgResponseTimeText = ViewBindings.findChildViewById(rootView, id);
      if (avgResponseTimeText == null) {
        break missingId;
      }

      id = R.id.emptyStateCard;
      MaterialCardView emptyStateCard = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateCard == null) {
        break missingId;
      }

      id = R.id.headerCard;
      MaterialCardView headerCard = ViewBindings.findChildViewById(rootView, id);
      if (headerCard == null) {
        break missingId;
      }

      id = R.id.recentEventsRecyclerView;
      RecyclerView recentEventsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recentEventsRecyclerView == null) {
        break missingId;
      }

      id = R.id.totalCorrectText;
      TextView totalCorrectText = ViewBindings.findChildViewById(rootView, id);
      if (totalCorrectText == null) {
        break missingId;
      }

      id = R.id.totalDecksText;
      TextView totalDecksText = ViewBindings.findChildViewById(rootView, id);
      if (totalDecksText == null) {
        break missingId;
      }

      id = R.id.totalFlashcardsText;
      TextView totalFlashcardsText = ViewBindings.findChildViewById(rootView, id);
      if (totalFlashcardsText == null) {
        break missingId;
      }

      id = R.id.totalWrongText;
      TextView totalWrongText = ViewBindings.findChildViewById(rootView, id);
      if (totalWrongText == null) {
        break missingId;
      }

      return new ActivityAnalyticsBinding((ConstraintLayout) rootView, accuracyText,
          avgResponseTimeText, emptyStateCard, headerCard, recentEventsRecyclerView,
          totalCorrectText, totalDecksText, totalFlashcardsText, totalWrongText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
